l = []

for i in range(5):
    l.append(i)
    
print(l)    

# list comprehension
ul = [i for i in range(5)]
print(l,ul)

'''
[0, 1, 2, 3, 4]
[0, 1, 2, 3, 4] [0, 1, 2, 3, 4]

=== Code Execution Successful ===
'''

even = []
n = 20 
for i in range(1, n+1):
    if i % 2 == 0:
        even.append(i)

# using LC
n = 20
ueven = [i for i in range(1, n+1) if i % 2 == 0]
print(ueven)

'''[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

=== Code Execution Successful ==='''

l = [2,3,4,5,6,7,8,9,0]
res = []
for i in l:
    if i % 2 == 0:
        res.append("Even")
    else:
        res.append("odd")

# LC

l = [2,3,4,5,6,7,8,9,0]

ures = ["even" if i % 2 == 0 else "odd" for i in l]
print(ures)

'''
['even', 'odd', 'even', 'odd', 'even', 'odd', 'even', 'odd', 'even']

=== Code Execution Successful ===
'''

res = []
for i in l:
    res.append(sum(i))



# using lc
l = [[1,2],[3,4],[5,6],[7,8]]

ures = [sum(i) for i in l]
print(ures)

# [3, 7, 11, 15]

l = [2,3,4,5,6,7,8]

res = []
for i in range(len(l) - 1):
    for j in range(i+1,len(l)):
        res.append((l[i],l[j]))
        
ures = [(l[i],l[j]) for i in range(len(l) - 1) for j in range(i+1,len(l))]     
print(res,ures)
'''
[(2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (4, 5), (4, 6), (4, 7), (4, 8), (5, 6), (5, 7), (5, 8), (6, 7), (6, 8), (7, 8)] [(2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (4, 5), (4, 6), (4, 7), (4, 8), (5, 6), (5, 7), (5, 8), (6, 7), (6, 8), (7, 8)]

=== Code Execution Successful ===
'''

s = set()

for i in range(1,11):
    s.add(i)
    
us = {i for i in range(1,11)}
print(s,us)
# {1, 2, 3, 4, 5, 6, 7, 8, 9, 10} {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}


d = {}
for i in range(1,10):
    d[i] = i * i
    
ud = {i: i*i for i in range(1,10)}    
print(d,ud)
#{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81} {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}



t = tuple(i for i in range(1,10))
print(t)
# (1, 2, 3, 4, 5, 6, 7, 8, 9)





